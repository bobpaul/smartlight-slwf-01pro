# These substitutions allow the end user to override certain values
substitutions:
  name: ac
  friendly_name: "Window AC"
  
  # fallback AP settings
  wifi_ap_ssid: "AC-wifi"
  wifi_ap_password: "slwf01pro"
  
  # defaults
  use_beeper: "true"
  visual_min_temperature: "17 °C"
  visual_max_temperature: "30 °C"
  visual_temperature_step: "0.5 °C"

# Enable Home Assistant API
ota:
  - platform: esphome

wifi:
  ap:
    ssid: "${wifi_ap_ssid}"
    password: "${wifi_ap_password}"

esphome:
  name: "${name}"
  # Friendly names are used where appropriate in Home Assistant
  friendly_name: "${friendly_name}"
  # Automatically add the mac address to the name
  # so you can use a single firmware for all devices
  name_add_mac_suffix: true

  # This will allow for (future) project identification,
  # configuration and updates.
  project:
    name: SMLIGHT.SLWF-01Pro
    version: "2.1"

esp8266:  
  board: esp12e
#  board: esp01_1m
web_server:
  port: 80

captive_portal:

api:
  services:
    - service: follow_me
      variables:
        temperature: float
      then:
        midea_ac.follow_me:
          temperature: !lambda "return temperature;"
          beeper: false  

# This should point to the public location of this yaml file.
dashboard_import:
  package_import_url: github://bobpaul/smartlight-slwf-01pro/slwf-01pro.yaml@main
  import_full_config: false # or true

logger:
  baud_rate: 0

uart:
  tx_pin: 12
  rx_pin: 14
  baud_rate: 9600
  
button:
  - platform: factory_reset
    id: factory_reset_btn
    name: Factory reset
# "Display toggle" button
  - platform: template
    name: Display Toggle
    id: midea_display_toggle
    icon: mdi:theme-light-dark
    on_press:
      midea_ac.display_toggle:
# "Swing step" button
  - platform: template
    name: Swing Step
    id: midea_swing_step
    icon: mdi:tailwind
    on_press:
      midea_ac.swing_step:

climate:
  - platform: midea
    name: None                                        # "friendly_name" is default
    id: midea_climate                           
    period: 1s                                        # Optional
    timeout: 2s                                       # Optional
    num_attempts: 3                                   # Optional
    autoconf: false                                   # Autoconfigure most options.
    beeper: ${use_beeper}                             # Beep on commands.
    visual:                                           # Optional. Example of visual settings override.
      min_temperature: "${visual_min_temperature}"    # min: 17
      max_temperature: "${visual_max_temperature}"    # max: 30
      temperature_step: "${visual_temperature_step}"  # min: 0.5
    supported_modes:                                  # All capabilities in this section detected by autoconf.
      - FAN_ONLY                                      # This capability is always used.
      - HEAT_COOL               #on Window AC without heat, this maps to "Auto" which is more agressive about turning off the compressor
      - COOL
#      - HEAT
      - DRY
    custom_fan_modes:
      - SILENT
      - TURBO    #I don't think this does anything on my unit
    supported_presets:          # All capabilities in this section detected by autoconf.
      - ECO
      - BOOST
      - SLEEP                   # This capability is always used.
#      - ECO_SLEEP              # need this added; my units support both eco and sleep independently
#    custom_presets:             # All capabilities in this section detected by autoconf.
#      - FREEZE_PROTECTION
    supported_swing_modes:
      - VERTICAL                # This capability is always used.
#      - HORIZONTAL
#      - BOTH
    outdoor_temperature:        # Optional. Outdoor temperature sensor (may display incorrect values after long inactivity).
      name: Outdoor Temp
#    power_usage:                # Optional. Power usage sensor (only for devices that support this feature).
#      name: ${friendly_name} Power Usage
#    humidity_setpoint:          # Optional. Indoor humidity sensor (only for devices that support this feature).
#      name: ${friendly_name} Indoor Humidity

switch:
  - platform: template
    name: Beeper
    id: midea_beeper
    icon: mdi:volume-source
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    turn_on_action:
      midea_ac.beeper_on:
    turn_off_action:
      midea_ac.beeper_off:

# Sensor from HASS for setting up FollowMe temperature
remote_transmitter:
  pin: GPIO13                       # For slwf-01pro-v2 dongle
  carrier_duty_percent: 100%        # 50% for IR LED, 100% for direct connect to TSOP IR receiver output.

sensor:
#  - platform: homeassistant
#    entity_id: ${follow_me_sensor}
#    id: follow_me_sensor
#    filters:
#      - throttle: 10s
#      - heartbeat: 2min
#      - debounce: 1s
#    on_value:
#      midea_ac.follow_me:
#        temperature: !lambda "return x;"
#        beeper: false
  - platform: wifi_signal
    name: Wi-Fi Signal
    update_interval: 60s
  - platform: uptime
    name: "Uptime"
    id: uptime_sec
    internal: true
  - platform: template
    name: Uptime Days
    lambda: |-
      return (id(uptime_sec).state/60)/60/24;
    icon: mdi:clock-start
    unit_of_measurement: days
    update_interval: 60s
    
# "Power toggle" script
script:
  - id: on_button_click
    then:
      midea_ac.power_toggle:
